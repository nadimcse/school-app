apiVersion: v1
data:
  application.yaml: |-
    {
        "student": {
            "name": "ob",
            "group": "arts"
        }
    }
kind: ConfigMap
metadata:
  name: school-config-appyaml
  namespace: school-ns
---
apiVersion: v1
data:
  PORT: "8080"
  spring.cloud.config.enabled: "false"
  spring.cloud.kubernetes.config.enableApi: "false"
  spring.cloud.kubernetes.config.name: school-app-config-appyaml
  spring.cloud.kubernetes.config.namespace: school-ns
  spring.cloud.kubernetes.config.paths: /opt/etc/conf/application.yaml
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: ats-availability
  name: school-app-config
  namespace: school-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: school-app
  name: school-app-deployment
  namespace: school-ns
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      app: school-app
  template:
    metadata:
      labels:
        app: school-app
      namespace: school-ns
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: school-app-config
          image: registry.hub.docker.com/doc185174/school-app:latest
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 30
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
          name: school-app
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 8000m
              memory: 2Gi
            requests:
              cpu: 8000m
              memory: 1Gi
          volumeMounts:
            - mountPath: /opt/etc/conf
              name: config-volume
              readOnly: true
      volumes:
        - configMap:
            name: school-app-config-appyaml
          name: config-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: school-app
  name: school-app-service
  namespace: school-ns
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: school-app